name: tf-random
version: 0.5
id: tf-random-0.5-H0EZh6X3duX25gCCL9n0I3
key: tf-random-0.5-H0EZh6X3duX25gCCL9n0I3
license: BSD3
maintainer: Michał Pałka <michal.palka@chalmers.se>
synopsis: High-quality splittable pseudorandom number generator
description:
    This package contains an implementation of a high-quality splittable pseudorandom number generator. The generator is based on a cryptographic hash function built on top of the ThreeFish block cipher. See the paper /Splittable Pseudorandom Number Generators Using Cryptographic Hashing/ by Claessen, Pałka for details and the rationale of the design.
    .
    The package provides the following:
    .
    * A splittable PRNG that implements the standard 'System.Random.RandomGen' class.
    .
    * The generator also implements an alternative version of the 'System.Random.TF.Gen.RandomGen' class (exported from "System.Random.TF.Gen"), which requires the generator to return pseudorandom integers from the full 32-bit range, and contains an n-way split function.
    .
    * An alternative version of the @Random@ class is provided, which is linked to the new @RandomGen@ class, together with @Random@ instances for some integral types.
    .
    * Two functions for initialising the generator with a non-deterministic seed: one using the system time, and one using the @\/dev\/urandom@ UNIX special file.
    .
    The package uses an adapted version of the reference C implementation of ThreeFish from the reference package of the Skein hash function (<https://www.schneier.com/skein.html>), originally written by Doug Whiting.
    .
    Please note that even though the generator provides very high-quality pseudorandom numbers, it has not been designed with cryptographic applications in mind.
category: Random
author: Michał Pałka <michal.palka@chalmers.se>
exposed: True
indefinite: False
exposed-modules:
    System.Random.TF System.Random.TF.Gen System.Random.TF.Init
    System.Random.TF.Instances
abi: 5befd000df4dff92fd95dae49d12bf2a
trusted: False
import-dirs: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/lib/x86_64-linux-ghc-8.2.2/tf-random-0.5-H0EZh6X3duX25gCCL9n0I3
library-dirs: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/lib/x86_64-linux-ghc-8.2.2/tf-random-0.5-H0EZh6X3duX25gCCL9n0I3
dynamic-library-dirs: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/lib/x86_64-linux-ghc-8.2.2
data-dir: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/share/x86_64-linux-ghc-8.2.2/tf-random-0.5
hs-libraries: HStf-random-0.5-H0EZh6X3duX25gCCL9n0I3
depends:
    base-4.10.1.0 primitive-0.6.3.0-CXy1O9sQYlI58rn9KQkFyo
    random-1.1-LLUGZ7T9DqQ5vN0Jbcd0We time-1.8.0.2
abi-depends: base-4.10.1.0=35a7f6be752ee4f7385cb5bf28677879
             primitive-0.6.3.0-CXy1O9sQYlI58rn9KQkFyo=c6749b6f9516519305c703393b0c0693
             random-1.1-LLUGZ7T9DqQ5vN0Jbcd0We=bddaa4d6513f513fbc23673a7214617b
             time-1.8.0.2=7cc0324e0aef789d5f0780f6640c241b
haddock-interfaces: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.2.2/tf-random-0.5/html/tf-random.haddock
haddock-html: /home/la1/Documents/MasterThesis/aiw2/.cabal-sandbox/share/doc/x86_64-linux-ghc-8.2.2/tf-random-0.5/html
